1. Компоненты пакет.
xbNode          - статический класс-фабрика; включает автозагрузчик

xbNodePrototype - прототип всех типов нод, кроме библиотеки;
                  реализует get-аксессор и алгоритм распознавания данных ноды

xbNodeAPI       - нода подключаемого API; совместима с парадигмами класса xbClass;
                  позволяет подгрузить свои методы автоматически в API объекта-владельца

xbNodePlugin    - нода плагина;
                  реализует принцип хуков, событий и дата-хендлов

xbNodeCache     - нода загрузчика кеша;
                  определяет местонахождение файла кеша и при необходимости создаёт оный

xbNodeUnit      - нода модуля обработки; маршрутизатор действий

xbNodeLoader    - процессор загрузки кеша; использует разные обработчики

xbNodeContainer - контейнер для нод. Во многом копирует xbClass.

2. Рекомендации для корректной работы пакета.
- Подгружать библиотеку лучше явно при помощи require/require_once
- Желательно использовать для создания инстансов фабрику-класс xbNode (метод create)
- Сразу после подгрузки пакета необходимо указать, если нужно:
  - префикс классов [module] при помощи метода xbNode::classPrefix()
  - абсолютный путь к папке с модулями в репозитории [@NULL], если используется
    репозитарная система, при помощи метода xbNode::modulesPath().
  - путь к папке с модулями в проекте [system/modules] относительно корневой папки проекта
    при помощи метода xbNode::modulesDeploy().
  - путь к папке кеша [content/cache] относительно корневой папки проекта
    при помощи метода xbNode::cacheDeploy().
  - обработчик ошибок при помощи метода xbNode::errorHandler(). TRUE будет означать
    отключение регистрации ошибок, FALSE - возврат к дефолтной системе (выброс
    исключения типа Exception). Для определения своего обработчика необходимо передать
    аргумент типа callable

3. Принцип работы пакета.
Подгружаемый модуль должен представлять из себя некую совокупность файлов с классами,
именованными по принципу:

  [префикс_классов][название_модуля][тип_компонента][название_компонента]

Название модуля может быть пустым. В этом случае поиск будет производиться в подпапке
system. Типом компонента может быть:

- Lib    - статическая библиотека
- API    - API, расширяющее функционал контейнера
- Plugin - плагин
- Cache  - обработчик кеша
- Unit   - модуль обработки

Название может быть пустым. В этом случае поиск производится в директории модуля
под именами:

lib.php    - статическая библиотека
api.php    - API
plugin.php - плагин
cache.php  - обработчик кеша
unit.php   - модуль обработки

В ином случае поиск файла класса производится в папках:

lib     - статические библиотеки
api     - API
plugins - плагины
cache   - обработчики кеша
units   - модули обработки

У любого элемента модуля есть ключ:

  [название_модуля].[название_компонента]

При описании зависимостей в свойстве _uses компонента используются ключи
подключаемых API.